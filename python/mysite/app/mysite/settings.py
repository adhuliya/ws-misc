"""
Django settings for mysite project.

Generated by 'django-admin startproject' using Django 3.0.2.

For more information on this file, see
https://docs.djangoproject.com/en/3.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.0/ref/settings/
"""

import os

DEFAULT_CON_ID = "NoContainerId"
CONTAINER_ID = os.getenv("CONTAINER_ID", DEFAULT_CON_ID)[-len(DEFAULT_CON_ID):]

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'skfx2fg&n60y3fe_qh!o+w8ga8vbw*_te349t*h2g09l%qchg9'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True
#DEBUG = False

#ALLOWED_HOSTS = ['127.0.0.1', 'localhost']
ALLOWED_HOSTS = ['*'] # match any host

# Application definition

INSTALLED_APPS = [
  'rest_framework',
  'main.apps.MainConfig',
  'snippets.apps.SnippetsConfig',
  'polls.apps.PollsConfig',
  'django.contrib.admin',
  'django.contrib.auth',
  'django.contrib.contenttypes',
  'django.contrib.sessions',
  'django.contrib.messages',
  'django.contrib.staticfiles',
]

MIDDLEWARE = [
  'django.middleware.security.SecurityMiddleware',
  'django.contrib.sessions.middleware.SessionMiddleware',
  'django.middleware.common.CommonMiddleware',
  'django.middleware.csrf.CsrfViewMiddleware',
  'django.contrib.auth.middleware.AuthenticationMiddleware',
  'django.contrib.messages.middleware.MessageMiddleware',
  'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'mysite.urls'

TEMPLATES = [
  {
    'BACKEND': 'django.template.backends.django.DjangoTemplates',
    'DIRS': [os.path.join(BASE_DIR, 'templates')],
    'APP_DIRS': True,
    'OPTIONS': {
      'context_processors': [
        'django.template.context_processors.debug',
        'django.template.context_processors.request',
        'django.contrib.auth.context_processors.auth',
        'django.contrib.messages.context_processors.messages',
      ],
    },
  },
]

WSGI_APPLICATION = 'mysite.wsgi.application'

# Database
# https://docs.djangoproject.com/en/3.0/ref/settings/#databases

DATABASES = {
  'default': {
    'ENGINE': 'django.db.backends.postgresql',
    'NAME': 'itsoflife',
    'USER': 'itsoflife',
    'PASSWORD': 'anshuisneo',
    'HOST': 'postgres', # docker network create itsoflife; --network="itsoflife"
    'PORT': '5432',
    'CONN_MAX_AGE': 2,  # seconds for which to keep the connection alive
  },

  # 'default': {
  #     'ENGINE': 'django.db.backends.sqlite3',
  #     'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
  # }
}

# Password validation
# https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
  {
    'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
  },
  {
    'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
  },
  {
    'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
  },
  {
    'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
  },
]

LOGGING = {
  'version': 1,
  'disable_existing_loggers': False,
  'formatters': {
    'verbose': {
      #'format': '{levelname} {asctime} {name} {pathname} {funcname} {lineno}\n{process:d} {thread:d}\n{message}',
      'format': ('  DJANGO.START: {CONTAINER_ID} {{levelname}} {{asctime}} {{name}}' 
                 '\n  {{process:d}}:{{thread:d}}(pid:threadid)'
                 '\n  {{funcName}}:{{lineno:d}} {{pathname}}'
                 '\n{{message}}\n  DJANGO.END').format(CONTAINER_ID=CONTAINER_ID),
      'style': '{',
    },

    'simple': {
      'format': '{levelname} {message}',
      'style': '{',
    },
  },

  'filters': {
    'require_debug_true': {
      '()': 'django.utils.log.RequireDebugTrue',
    },
  },

  'handlers': {
    'console': {
      'level': 'DEBUG', #'INFO' in production
      # 'filters': ['require_debug_true'],
      'class': 'logging.StreamHandler',
      'formatter': 'verbose'
    },

    'file': {
      'level': 'DEBUG',
      'class': 'logging.FileHandler',
      'filename': os.path.join(BASE_DIR,
                               'production/runtime/logs/mysite.log'),
      'formatter': 'verbose'
    },

  },

  'loggers': {
    'django': {
      'handlers': ['console'],
      'propagate': True,
    },

    'mysite.custom': {
      #'handlers': ['file', 'console'],
      'handlers': ['console'],
      'level': 'INFO',
      # 'filters': ['special']
    }
  }
}

# Internationalization
# https://docs.djangoproject.com/en/3.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

# AD TIME_ZONE = 'UTC'
TIME_ZONE = 'Asia/Kolkata'

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.0/howto/static-files/

STATIC_URL = '/static/'

# AD needed by: python3 manage.py collectstatic
STATIC_ROOT = os.path.join(BASE_DIR, "static/")

REST_FRAMEWORK = {
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination',
    'PAGE_SIZE': 10
}

